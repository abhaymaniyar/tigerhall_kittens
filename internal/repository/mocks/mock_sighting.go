// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/sighting.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"
	model "tigerhall_kittens/internal/model"
	repository "tigerhall_kittens/internal/repository"

	gomock "github.com/golang/mock/gomock"
)

// MockSightingRepo is a mock of SightingRepo interface.
type MockSightingRepo struct {
	ctrl     *gomock.Controller
	recorder *MockSightingRepoMockRecorder
}

// MockSightingRepoMockRecorder is the mock recorder for MockSightingRepo.
type MockSightingRepoMockRecorder struct {
	mock *MockSightingRepo
}

// NewMockSightingRepo creates a new mock instance.
func NewMockSightingRepo(ctrl *gomock.Controller) *MockSightingRepo {
	mock := &MockSightingRepo{ctrl: ctrl}
	mock.recorder = &MockSightingRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSightingRepo) EXPECT() *MockSightingRepoMockRecorder {
	return m.recorder
}

// GetSightings mocks base method.
func (m *MockSightingRepo) GetSightings(ctx context.Context, opts repository.GetSightingOpts) ([]model.Sighting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSightings", ctx, opts)
	ret0, _ := ret[0].([]model.Sighting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSightings indicates an expected call of GetSightings.
func (mr *MockSightingRepoMockRecorder) GetSightings(ctx, opts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSightings", reflect.TypeOf((*MockSightingRepo)(nil).GetSightings), ctx, opts)
}

// ReportSighting mocks base method.
func (m *MockSightingRepo) ReportSighting(ctx context.Context, sighting *model.Sighting) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReportSighting", ctx, sighting)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReportSighting indicates an expected call of ReportSighting.
func (mr *MockSightingRepoMockRecorder) ReportSighting(ctx, sighting interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportSighting", reflect.TypeOf((*MockSightingRepo)(nil).ReportSighting), ctx, sighting)
}
