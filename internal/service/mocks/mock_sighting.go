// Code generated by MockGen. DO NOT EDIT.
// Source: internal/service/sighting.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"
	model "tigerhall_kittens/internal/model"
	repository "tigerhall_kittens/internal/repository"
	service "tigerhall_kittens/internal/service"

	gomock "github.com/golang/mock/gomock"
)

// MockSightingService is a mock of SightingService interface.
type MockSightingService struct {
	ctrl     *gomock.Controller
	recorder *MockSightingServiceMockRecorder
}

// MockSightingServiceMockRecorder is the mock recorder for MockSightingService.
type MockSightingServiceMockRecorder struct {
	mock *MockSightingService
}

// NewMockSightingService creates a new mock instance.
func NewMockSightingService(ctrl *gomock.Controller) *MockSightingService {
	mock := &MockSightingService{ctrl: ctrl}
	mock.recorder = &MockSightingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSightingService) EXPECT() *MockSightingServiceMockRecorder {
	return m.recorder
}

// GetSightings mocks base method.
func (m *MockSightingService) GetSightings(ctx context.Context, opts repository.GetSightingOpts) ([]model.Sighting, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSightings", ctx, opts)
	ret0, _ := ret[0].([]model.Sighting)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSightings indicates an expected call of GetSightings.
func (mr *MockSightingServiceMockRecorder) GetSightings(ctx, opts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSightings", reflect.TypeOf((*MockSightingService)(nil).GetSightings), ctx, opts)
}

// ReportSighting mocks base method.
func (m *MockSightingService) ReportSighting(ctx context.Context, user service.ReportSightingReq) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReportSighting", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReportSighting indicates an expected call of ReportSighting.
func (mr *MockSightingServiceMockRecorder) ReportSighting(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReportSighting", reflect.TypeOf((*MockSightingService)(nil).ReportSighting), ctx, user)
}
